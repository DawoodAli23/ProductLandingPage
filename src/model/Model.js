/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef,useState } from 'react'
import { useGLTF,Html } from '@react-three/drei'
import './Model.css'

const HTMLContent = ({
  text
}) => {
  return (
    <mesh>
      <boxBufferGeometry position={[0,-50,0]} scale={1}/>
      <Html center prepend>
        <p className="title">{text}</p>
      </Html>
    </mesh>
  );
};

export default function Model(props) {
  const domContent = useRef();
  const [Seat, setSeat] = useState(false);
  const [backSupport, setBackSupport] = useState(false);
  const [armRest, setarmRest] = useState();
  const [Control, setControl] = useState(false);
  const [bottomSupport, setBottomSupport] = useState(false);
  const [Text, setText] = useState("HOVER OVER DIFFRENT PARTS TO LEARN MORE");
  const group = useRef()
  const { nodes, materials } = useGLTF('/model.glb')
  useEffect(()=>{
    if(Seat){
      setText("OUR SEATS ARE BUILT WIT THE MEMORY FOAM WHICH WITH TIME WILL AUTOMATICALLY ADJUST TO YOUR BACK SHAPE AND YOU CAN CHANGE COLOR OF THE SEAT TO ANY COLOR YOU DESIRE");
    }else if(backSupport){
      setText("AND YOUR WHOLE WEIGHT IS FULLY SUPPORTED WITH THE ALUMINUM FRAME WHIC IS FINISHED WITH OUR FINEST PAINT");
    }else if(armRest){
      setText("OUR ARM REST ALSO COMES WIT MEMOR FOAM TO FULLY SUPPORT YOUR ELBOW");
    }else if(Control){
      setText("Reach behind you and turn the BackFitâ„¢ knob clockwise to make the adjustment work with your eight, which will properly align your head to your monitor.");
    }else if(bottomSupport){
      setText("OUR BOTTOM SUPPORT IS ALSO MADE UP OF THE SAME ALUMINUM STEEL AND IT HAS BEEN TESTED COUTLESS TIME TO NEVER FAIL ON YOU");
    }else{
      setText("HOVER OVER DIFFRENT PARTS TO LEARN MORE");
    }
    // console.log(Text);
  })
  return (
    <>
      <group ref={group} {...props} dispose={null} position={[0,-30,0]} rotation={[0,-130,0]} >
        <mesh geometry={nodes.bottom.geometry} material={nodes.Mesh005.material}  position={[0, 0, 0]} onPointerEnter={e=>setBottomSupport(true)} 
        onPointerLeave={e=>setBottomSupport(false)}/>
        <mesh geometry={nodes.control.geometry} material={nodes.armrest.material} position={[3.76, 30.58, 0.57]} 
        onPointerEnter={e=>setControl(true)} 
        onPointerLeave={e=>setControl(false)}/>
        <mesh geometry={nodes.armrest.geometry} material={nodes.armrest.material} position={[3.48, 58.42, -0.32]} 
        onPointerEnter={e=>setarmRest(true)} 
        onPointerLeave={e=>setarmRest(false)}/>
        <group position={[15.85, 60.98, -0.47]} 
        onPointerEnter={e=>setBackSupport(true)} 
        onPointerLeave={e=>setBackSupport(false)}>
          <mesh geometry={nodes.Mesh005.geometry} material={nodes.Mesh005.material} />
          <mesh geometry={nodes.Mesh005_1.geometry} material={materials['Mat.2']} />
        </group>
        <mesh geometry={nodes.take.geometry} material={materials.take} position={[9.66, 54.24, -0.49]} onPointerEnter={e=>setSeat(true)} 
        onPointerLeave={e=>setSeat(false)}/>
        
      </group>
      {/* <HTMLContent text={Text}/> */}
      <Html scaleFactor={15} class="main">
        <div class="content">{Text}</div>
      </Html>
    </>
  )
}

useGLTF.preload('/model.glb')
